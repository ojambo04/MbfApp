@page "/accountcodes/details"
@using MbfApp.Data.Entities
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<MbfApp.Data.AppDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>
<hr />
<div>
    
  
    @if (accountcode is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Code</dt>
            <dd class="col-sm-10">@accountcode.Code</dd>
            <dt class="col-sm-2">Description</dt>
            <dd class="col-sm-10">@accountcode.Description</dd>
        </dl>
        <div>
            <a href="@($"/accountcodes/edit?id={accountcode.Id}")">Edit</a> |
            <a href="@($"/accountcodes")">Back to List</a>
        </div>
    }
</div>

@code {
    private AccountCode? accountcode;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        accountcode = await context.AccountCodes.FirstOrDefaultAsync(m => m.Id == Id);

        if (accountcode is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
