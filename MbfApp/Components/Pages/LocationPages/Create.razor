@page "/locations/create"
@using MbfApp.Dtos.Locations

@inject ILocationService LocationService
@inject NavigationManager NavigationManager

<PageTitle>Create New Location</PageTitle>

<div class="row justify-content-center">
    <div class="col-md-6">
        <div class="card rounded-2 overflow-hidden p-4">
            <h5 class="mb-0">Create New Location</h5>
            <hr class="border-1 border-success opacity-50">

            @if (ErrorMessage is not null)
            {
                <div class="alert alert-danger" role="alert">@ErrorMessage</div>
            }

            <EditForm method="post" Model="Location" OnValidSubmit="AddLocation" FormName="create" Enhance>
                <DataAnnotationsValidator />
                
                <div class="mb-3">
                    <label for="name" class="form-label">Name</label>
                    <InputText id="name" @bind-Value="Location.Name" class="form-control" aria-required="true" />
                    <ValidationMessage For="() => Location.Name" class="text-danger" />
                </div>
                <button type="submit" class="btn btn-success btn-sm mb-2">Create</button>
                <a href="/locations" class="btn btn-secondary btn-sm mb-2">Back </a>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private LocationRequestDto Location { get; set; } = new();

    private string? ErrorMessage;

    private async Task AddLocation()
    {
        try 
        {
            await LocationService.CreateLocation(Location);
            NavigationManager.NavigateTo("/locations");
        }
        catch (InvalidOperationException ex)
        {
            ErrorMessage = ex.Message;
            Console.WriteLine(ex.Message);
        }
    }
}
